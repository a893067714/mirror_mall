package com.iwonder.tea.front.action;

import java.io.IOException;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;

import javax.mail.Session;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.iwonder.tea.dictionary.service.IDictionarySKUService;
import com.iwonder.tea.dictionary.service.imp.DictionarySKUServiceImp;
import com.iwonder.tea.framework.action.BaseServlet;
import com.iwonder.tea.framework.service.ProxyServiceFactory;
import com.iwonder.tea.framework.util.StringUtil;
import com.iwonder.tea.framework.util.UUIDUtils;
import com.iwonder.tea.ord.entity.Order;
import com.iwonder.tea.ord.entity.OrderSKU;
import com.iwonder.tea.ord.service.IOrderSKUService;
import com.iwonder.tea.ord.service.IOrderService;
import com.iwonder.tea.ord.service.imp.OrderSKUServiceImp;
import com.iwonder.tea.ord.service.imp.OrderServiceImp;
import com.iwonder.tea.ord.view.OrderView;
import com.iwonder.tea.prd.service.IProductSkuService;
import com.iwonder.tea.prd.service.imp.ProductSkuServiceImp;
import com.iwonder.tea.usr.entity.UserInfo;

@WebServlet("/OrderServlet.do")
public class OrderServlet extends BaseServlet implements Serializable {
	private static final long serialVersionUID = 1L;
	private IOrderSKUService orderSKUService = (IOrderSKUService) ProxyServiceFactory
			.getProxyService(OrderSKUServiceImp.class);
	private IOrderService orderService = (IOrderService) ProxyServiceFactory.getProxyService(OrderServiceImp.class);

	@SuppressWarnings("unused")
	protected void list(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		UserInfo userInfo = (UserInfo) request.getSession().getAttribute("userInfo");
		userInfo.getUserId();
		System.out.println(userInfo.getUserId());
		ArrayList<OrderView> orderViews = orderService.listView(userInfo.getUserId());
		request.setAttribute("orderViews", orderViews);
		System.out.println("执行这里");
		// 页面的跳转：转发
		request.getRequestDispatcher("/WEB-INF/jsp/front/order.jsp").forward(request, response);
	}

	protected void delOrderSKU(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// s1.取参数
		String orderDtlId = request.getParameter("orderDtlId");
		System.out.println(orderDtlId);
		orderSKUService.delete(orderDtlId);
		response.sendRedirect("OrderServlet.do?method=list");
		// request.getRequestDispatcher("/WEB-INF/jsp/front/order.jsp").forward(request,
		// response);
	}

	protected void addOrderAndOrderSKU(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// s1.取参数
		String[] productSkuIdArr = request.getParameterValues("productSkuId");
		String[] priceCurrentArr = request.getParameterValues("priceCurrent");
		Date createDate = new Date();
		BigDecimal sumprice = StringUtil.parseBigDecimal(request.getParameter("sumprice"));
		String addressId = request.getParameter("addressId");
		UserInfo userInfo = (UserInfo) request.getSession().getAttribute("userInfo");
		String orderId = UUIDUtils.getId();
		String orderCode = System.currentTimeMillis() + "";
		Order order = new Order();
		order.setOrderId(orderId);
		order.setOrderCode(orderCode);
		order.setUserId(userInfo.getUserId());
		order.setAddressId(addressId);
		order.setCreateDate(createDate);
		order.setTotalPrice(sumprice);
		order.setPayStat("no_pay");
		order.setPayDate(createDate);
		orderService.insert(order);
		for (int i = 0; i < productSkuIdArr.length; i++) {
			String orderDtlId = UUIDUtils.getId();
			String orderDtlCode = System.currentTimeMillis() + "";
			OrderSKU orderSKU = new OrderSKU();
			orderSKU.setOrderDtlId(orderDtlId);
			orderSKU.setOrderDtlCode(orderDtlCode);
			orderSKU.setOrderId(orderId);
			orderSKU.setProductSkuId(productSkuIdArr[i]);
			orderSKU.setPrice(StringUtil.parseBigDecimal(priceCurrentArr[i]));
			orderSKU.setAmount(1);
			orderSKU.setSendStat("no_send");
			orderSKU.setSignStat("no_sign");
			orderSKU.setEvalStat("no_eval");
			orderSKUService.insert(orderSKU);
		}
		response.sendRedirect("OrderServlet.do?method=list");
		// response.sendRedirect("OrderServlet.do?method=list");
		// request.getRequestDispatcher("/WEB-INF/jsp/front/order.jsp").forward(request,
		// response);
	}
}